1). React renderiza elementos

2). Component: funcion que devuelve un elemento es una fabrica de elementos
empiezan por mayuscula para que react los diferencie de los elementos de html

cuando un componente padre se modifica su estado cambia o refresca todos su componentes hijos independientemente si sea a modificado los propts(parametros) o no identifica y renderiza solo los cambios pero en la consola is se actualiza todo 

3). (props): parametros recividos  no se deben modificar se crea otra variable
y a esta se le asigna el parametro y esta variable si es la que se modifica

ademas de varibles y funciones tambien ese le puede  enviar elementos html

si utilizas un prop(parametro) para inicilizar un estado de un componente
este solo se utilza la primera vez para inicilizarce no vuelve a tomar el prop(parametro) para cambiar el estado ya iniciado ya que este solo se va poder cambiar desdes el componente interno

4). children: la palabra reservada children que se manda como parametro se puede mandar cualquier cosa tanto varibls funciones elementos html h1 div texto

5). Hook: (utilidad) importaciones permite a√±adir funcionalidades a los componentes hooks mas utilizados useState y useEffect

1.useState: permite tener un estado que al cambiar de valor va volver a renderizar el componente 

2.useEffect: permite escribir ejcuatar codigo arbitrario(que a mi me de la gana) cuando el componente se monta el DOM y  cada vez que cambien las dependencias que nosostros decidamos 
 2.1 dependencias:son valores que cada vez que cambien va ejecutar el codigo arbitrario si solo quiere que se ejecute una vez seria []
2.2 el return del useEffect se ejecuta cuando el componente se deja renderizar y cuando hay un cambio en su dependencia

6). las dependencias de useEffect no se pasan como parametros a funciones o metodos que son de la logica se tienen que quedar en el jsx nada de pasarlos

7).customHook: Extraer logica de un componente para que este quede mas limpio legible y poder reutilizar logica extraida del componente en otros componentes

8).useRef: Es un hook permite crear una referencia mutable que persistes durante todo el ciclo de vida de tu componente.
Es muy util para guardar cualquier valor que puedas mutar como id un elemento del dom un contandor etc
y que cada vez que cambia no vuelve a renderizar el componente que lo diferencia del useState de esta manera su valor es persistente sin importar si es rendiza el componente tambien persisten las referencias del elemento en el dom

